{
    "${name}Start": {
        "Type": "Pass",
        "Next": "${name}ActivitySetStatusDB"
    },
    "${name}ActivitySetStatusDB": {
        "Type": "Task",
        "Resource": "arn:aws:states:::dynamodb:updateItem",
        "Parameters": {
            "TableName": "${StateTableName}",
            "Key": {
                "uid": {
                    "S.$": "$.uid"
                },
                "workflow": {
                    "S.$": "$.workflow"
                }
            },
            "UpdateExpression": "set #activities.#activity.#status.#state = :state",
            "ExpressionAttributeNames": {
                "#activities": "activities",
                "#activity": "${name}",
                "#status": "status",
                "#state": "state"
            },
            "ExpressionAttributeValues": {
                ":state": {
                    "S": "In Progress"
                }
            }
        },
        "ResultPath": "$.ignore",
        "Next": "${name}PreProcessing"
    },
    "${name}PreProcessing": {
        "Type": "Task",
        "Resource": "${preprocessingArn}",
        "ResultPath": "$.ignore",
        "Next": "${name}AsyncFanOut"
    },
    "${name}AsyncFanOut": {
        "Type": "Task",
        "Resource":"arn:aws:states:::lambda:invoke.waitForTaskToken",
        "Parameters":{
            "FunctionName": "${preprocessingArn}",
            "Payload": {
                "data.$": "$",
                "asyncToken.$": "$$.Task.Token"
            }
        },
        "ResultPath": "$.activities.${name}.async.status.state",
        "Next": "${name}AsyncResultCheck"
    },
    "${name}AsyncResultCheck": {
        "Type": "Choice",
        "Choices": [
            {
                "Variable": "$.activities.${name}.async.status.state",
                "StringEquals": "Error",
                "Next": "${name}Error"
            }
        ],
        "Default": "${name}PostProcessing"
    },
    "${name}PostProcessing": {
        "Type": "Task",
        "Resource": "${postprocessingArn}",
        "ResultPath": "$.ignore",
        "Next": "${name}Complete"
    }
}