#
# Copyright 2017-2017 Mutual of Enumclaw. All Rights Reserved.
# License: Public
#
service: ${opt:system-name, 'orchestrator'}

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters
  - serverless-plugin-generic-stack

provider:
  name: aws
  runtime: nodejs10.x
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, 'dev'}
  deploymentPrefix: ${self:service}/${self:provider.stage}
  environment:
    epsagonToken:
      Ref: EpsagonToken
    epsagonAppName:
      Ref: EpsagonAppName
    epsagonMetadata:
      Ref: EpsagonMetadata
    statusTable: ${self:custom.tables.status}
    pluginTable: ${self:custom.tables.plugins}

  stackParameters:
    - ParameterKey: "Environment"
      ParameterValue: ${self:provider.stage}
    - ParameterKey: EpsagonToken
      ParameterValue: ${opt:epsagon-token, ''}
    - ParameterKey: EpsagonAppName
      ParameterValue: ${opt:epsagon-app-name, ''}
    - ParameterKey: EpsagonMetadata
      ParameterValue: ${opt:epsagon-meta, ''}
  stackTags: ${file(./${opt:tagConfig, 'default-tags.yml'})}
  deploymentBucket: ${opt:deploymentBucket, '${opt:config, ''}'}
  timeout: 60
  
custom:
  webpack:
    includeModules: true
    
  tables:
    status: "#{AWS::StackName}-status"
    plugins: "#{AWS::StackName}-plugin"
  
  ParameterTypes:
    current: ${self:custom.ParameterTypes.${opt:config, 'default'}}
    serverless: 
      yml: AWS::SSM::Parameter::Value<String>
    default: String

functions:
  updateStatus:
    handler: src/functions/handleSummary.updateActivityStatus
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - StatusTable
              - StreamArn
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
          - dynamodb:GetItem
        Resource:
          - Fn::GetAtt:
              - StatusTable
              - Arn
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource:
          - Fn::GetAtt:
              - PluginTable
              - Arn
      - Effect: Allow
        Action:
          - states:SendTaskSuccess
          - states:SendTaskFailure
        Resource: '*'
  initializeActivities:
    handler: src/functions/initializeActivities.initialize
    iamRoleStatementsName: "#{AWS::StackName}-#{AWS::Region}-ia"
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
        Resource:
          Fn::GetAtt:
            - StatusTable
            - Arn

resources:
  Parameters:
    EpsagonToken:
      Type: ${self:custom.ParameterTypes.current}
      Default: /<EnvironmentName>/epsagon/token
    EpsagonAppName:
      Type: ${self:custom.ParameterTypes.current}
      Default: /<EnvironmentName>/epsagon/app-name
    EpsagonMetadata:
      Type: ${self:custom.ParameterTypes.current}
      Default: /<EnvironmentName>/epsagon/app-name
    Environment:
      Type: ${self:custom.ParameterTypes.current}
      Default: /<EnvironmentName>/name
      
  Resources:
    PluginTable:
      Type: AWS::DynamoDB::Table
      Properties:
        KeySchema:
          - AttributeName: orchestratorId
            KeyType: HASH
          - AttributeName: subscriptionArn
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: orchestratorId
            AttributeType: S
          - AttributeName: subscriptionArn
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tables.plugins}
        Tags:
          - Key: Role
            Value: Configuration
          - Key: NPI
            Value: "true"
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true

    StatusTable:
      Type: AWS::DynamoDB::Table
      Properties:
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: workflow
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: workflow
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tables.status}
        Tags:
          - Key: Role
            Value: Status
          - Key: NPI
            Value: "true"
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true

  Outputs:
    DynamoDbPluginTableName:
      Value: 
        Ref: PluginTable
      Export:
        Name: "#{AWS::StackName}-plugin-name"

    DynamoDbPluginTableArn:
      Value: 
        Fn::GetAtt: 
          - PluginTable
          - Arn
      Export:
        Name: "#{AWS::StackName}-plugin-arn"

    DynamoDbStatusTableName:
      Value: 
        Ref: StatusTable
      Export:
        Name: "#{AWS::StackName}-status-name"

    DynamoDbStatusTableArn:
      Value: 
        Fn::GetAtt: 
          - StatusTable
          - Arn
      Export:
        Name: "#{AWS::StackName}-status-arn"

    DynamoDbStatusTableStreamArn:
      Value:
        Fn::GetAtt:
          - StatusTable
          - StreamArn
      Export:
        Name: "#{AWS::StackName}-status-stream-arn"

    InitailizeActivities:
      Value:
        Fn::GetAtt:
          - InitializeActivitiesLambdaFunction
          - Arn
      Export:
        Name: "#{AWS::StackName}-init-activites"