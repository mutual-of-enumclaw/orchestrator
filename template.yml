Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs12.x
    CodeUri: src/functions
    MemorySize: 128
    Timeout: 30
    Layers:
      - !Ref Library

Resources:
  updateStatus:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-updateStatus
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: updateStatus
      Handler: handleSummary.updateActivityStatus
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
                - dynamodb:GetItem
              Resource:
                - !GetAtt StatusTable.Arn
            - Effect: Allow
              Action:
                - dynamodb:Query
              Resource:
                - !GetAtt PluginTable.Arn
            - Effect: Allow
              Action:
                - states:SendTaskSuccess
                - states:SendTaskFailure
              Resource: '*'
      Events:
        StatusTable:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt StatusTable.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
      Environment:
        Variables:
          pluginTable: !Ref PluginTable
          statusTable: !Ref StatusTable
    Metadata:
      RuntimeOption: typescript


  initializeActivities:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-initializeActivities
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: initializeActivities
      Handler: initializeActivities.initialize
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
              Resource: !GetAtt StatusTable.Arn
      Environment:
        Variables:
          statusTable: !Ref StatusTable
    Metadata:
      RuntimeOption: typescript

  PluginTable:
      Type: AWS::DynamoDB::Table
      Properties:
        KeySchema:
          - AttributeName: orchestratorId
            KeyType: HASH
          - AttributeName: subscriptionArn
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: orchestratorId
            AttributeType: S
          - AttributeName: subscriptionArn
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TableName: !Sub ${AWS::StackName}-plugin
        Tags:
          - Key: Role
            Value: Configuration
          - Key: NPI
            Value: "true"

  StatusTable:
      Type: AWS::DynamoDB::Table
      Properties:
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: workflow
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: workflow
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TableName: !Sub ${AWS::StackName}-status
        Tags:
          - Key: Role
            Value: Status
          - Key: NPI
            Value: "true"

  Library:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Layer ${ResourceName}
        - ResourceName: library
      ContentUri: library
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: nodejs12.x
  
  
  metrics:
    Type: AWS::Serverless::Application
    Properties:
      Location: metrics/template.yml
      Parameters:
        StackTagName: !Sub ${StackTagName}-metrics
        EnvironmentTagName: !Ref EnvironmentTagName
        StatusTableName: !Ref StatusTable
        StatusTableArn: !GetAtt StatusTable.Arn
        StatusTableStreamArn: !GetAtt StatusTable.StreamArn
  
  
  ##
  ## Start Activities Section
  ##

  activityTest:
    Type: AWS::Serverless::Application
    Properties:
      Location: activity/template.yml
      Parameters:
        ParentStackName: !Ref AWS::StackName
        Name: "Test"
        EnvironmentTagName: !Ref EnvironmentTagName
        StatusTableName: !Ref StatusTable
        StatusTableArn: !GetAtt StatusTable.Arn
        PluginTableName: !Ref PluginTable
        PluginTableArn: !GetAtt PluginTable.Arn
    

  activityTest2:
    Type: AWS::Serverless::Application
    Properties:
      Location: activity/template.yml
      Parameters:
        ParentStackName: !Ref AWS::StackName
        Name: "Test2"
        EnvironmentTagName: !Ref EnvironmentTagName
        StatusTableName: !Ref StatusTable
        StatusTableArn: !GetAtt StatusTable.Arn
        PluginTableName: !Ref PluginTable
        PluginTableArn: !GetAtt PluginTable.Arn
    

  activityTest3:
    Type: AWS::Serverless::Application
    Properties:
      Location: activity/template.yml
      Parameters:
        ParentStackName: !Ref AWS::StackName
        Name: "Test3"
        EnvironmentTagName: !Ref EnvironmentTagName
        StatusTableName: !Ref StatusTable
        StatusTableArn: !GetAtt StatusTable.Arn
        PluginTableName: !Ref PluginTable
        PluginTableArn: !GetAtt PluginTable.Arn

  ##
  ## End Activities Section
  ##

Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
    