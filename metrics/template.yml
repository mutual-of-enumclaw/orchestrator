Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs12.x
    CodeUri: src
    MemorySize: 128
    Timeout: 30
    Layers:
      - !Ref OrchestratorLayerArn
    Environment:
      Variables:
        OrchestratorConfig: !Ref OrchestratorConfig

Parameters:
  StatusTableName:
    Type: String
  StatusTableArn:
    Type: String
  StatusTableStreamArn:
    Type: String
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  OrchestratorLayerArn:
    Type: String
    Default: arn:aws:lambda:us-west-2:000000000000:layer:not-a-real-layer:1
  OrchestratorConfig:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/orchestrator/stacks/<StackName>/config
  S3ReplicationArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/nucleus/core/customResources/s3Replication
  DeployedRegions:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/nucleus/deployedRegions
  FailureMetric:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/orchestrator/metric

Conditions:
  IsPrimaryRegion: !Equals
    - !Select [0, !Split [",", !Ref DeployedRegions]]
    - !Ref AWS::Region
  IsSecondaryRegion: !Not [!Condition IsPrimaryRegion]

Resources:
  snsTopicFailure:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Policy Issue Failure
      TopicName: !Sub ${StackTagName}-failure
  dynamodbTableMetrics:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: uid
          AttributeType: S
        - AttributeName: workflow
          AttributeType: S
      KeySchema:
        - AttributeName: workflow
          KeyType: HASH
        - AttributeName: uid
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableName: !Sub ${StackTagName}-failure-metrics
      TimeToLiveSpecification:
        AttributeName: timeout
        Enabled: true

  s3Workflows:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${StackTagName}-wr-${AWS::AccountId}-${AWS::Region}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  RunWorkflowsS3Replication:
    Type: Custom::BucketReplication
    Condition: IsSecondaryRegion
    Properties:
      ServiceToken: !Ref S3ReplicationArn
      Bucket1Name: !Ref s3Workflows
      AccountId: !Ref AWS::AccountId

  StepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${StackTagName}-CustomDataExtractRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - dynamodb:GetItem
                Resource:
                  - !GetAtt alertSupportTeam.Arn
                  - !Ref StatusTableArn
  StepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Ref StackTagName
      Role: !GetAtt StepFunctionRole.Arn
      Definition:
        Comment:
          This state machine tracks if the bind process completes in a specific period
          of time
        StartAt: WaitForProcessing
        States:
          WaitForProcessing:
            Type: Wait
            Seconds: 900
            Next: UpdatePolicyStatus
          UpdatePolicyStatus:
            Type: Task
            Resource: arn:aws:states:::dynamodb:getItem
            Parameters:
              TableName: !Ref StatusTableName
              Key:
                uid:
                  S.$: $.uid
                workflow:
                  S.$: $.workflow
            ResultPath: $.dynamo
            Next: ValidateStatus
            Retry:
              - ErrorEquals:
                  - States.ALL
                IntervalSeconds: 1
                BackoffRate: 2
                MaxAttempts: 100
          ValidateStatus:
            Type: Choice
            Choices:
              - Variable: $.dynamo.Item.status.M.state.S
                StringEquals: Complete
                Next: End
            Default: AlertSupportTeam
          AlertSupportTeam:
            Type: Task
            Resource: !GetAtt alertSupportTeam.Arn
            Next: WaitForProcessing
            Retry:
              - ErrorEquals:
                  - States.ALL
                IntervalSeconds: 1
                BackoffRate: 2
                MaxAttempts: 100
          End:
            Type: Pass
            End: true
  reportMetrics:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackTagName}-report
      Handler: dist/reportMetrics.handler
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: reportMetrics
      Events:
        UpdateMetrics:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource:
                - !GetAtt s3Workflows.Arn
                - !Sub ${s3Workflows.Arn}/*
            - Effect: Allow
              Action:
                - dynamodb:Scan
              Resource:
                - !GetAtt dynamodbTableMetrics.Arn
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource:
                - "*"
      Environment:
        Variables:
          metricsTable: !Ref dynamodbTableMetrics
          WorkflowRegistry: !Ref s3Workflows
          metric: !Ref FailureMetric
          metricNamespace: !Ref AWS::StackName
    Metadata:
      RuntimeOption: typescript
  alertSupportTeam:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackTagName}-alertSupportTeam
      Handler: dist/alertSupportTeam.handler
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: alertSupportTeam
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource:
                - !GetAtt s3Workflows.Arn
                - !Sub ${s3Workflows.Arn}/*
            - Effect: Allow
              Action:
                - sns:publish
              Resource:
                - !Ref snsTopicFailure
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                - !GetAtt dynamodbTableMetrics.Arn
      Environment:
        Variables:
          notificationArn: !Ref snsTopicFailure
          metricsTable: !Ref dynamodbTableMetrics
    Metadata:
      RuntimeOption: typescript
  startValidStateMachine:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackTagName}-startValidStateMachine
      Handler: dist/startValidationStateMachine.handler
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: startValidStateMachine
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource:
                - !GetAtt s3Workflows.Arn
                - !Sub ${s3Workflows.Arn}/*
            - Effect: Allow
              Action:
                - states:StartExecution
              Resource:
                - !Ref StepFunction
      Environment:
        Variables:
          stateMachineArn: !Ref StepFunction
          WorkflowRegistry: !Ref s3Workflows
      Events:
        dynamodbTableMetrics:
          Type: DynamoDB
          Properties:
            Stream: !Ref StatusTableStreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
    Metadata:
      RuntimeOption: typescript
